// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymTracker.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250209185041_Modifications")]
    partial class Modifications
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BodyPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("BodyPart");
                });

            modelBuilder.Entity("Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("ExerciseBodyPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_bodypart")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_exercise")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("fk_bodypart");

                    b.HasIndex("fk_exercise");

                    b.ToTable("ExerciseBodyPart");
                });

            modelBuilder.Entity("ExerciseExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<Guid>("fk_exercise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_workout")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("fk_exercise");

                    b.HasIndex("fk_workout");

                    b.ToTable("ExerciseExecution");
                });

            modelBuilder.Entity("Routine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Routine");
                });

            modelBuilder.Entity("SubBodyPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("fk_bodypart")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("fk_bodypart");

                    b.ToTable("SubBodyPart");
                });

            modelBuilder.Entity("Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fk_workoutday")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("fk_workoutday");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("WorkoutDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("fk_routine")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("fk_routine");

                    b.ToTable("WorkoutDay");
                });

            modelBuilder.Entity("WorkoutDayExercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_exercise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_workoutday")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("fk_exercise");

                    b.HasIndex("fk_workoutday");

                    b.ToTable("WorkoutDayExercise");
                });

            modelBuilder.Entity("Exercise", b =>
                {
                    b.HasOne("Workout", null)
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId");
                });

            modelBuilder.Entity("ExerciseBodyPart", b =>
                {
                    b.HasOne("BodyPart", "BodyPart")
                        .WithMany("ExercisesBodyParts")
                        .HasForeignKey("fk_bodypart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercise", "Exercise")
                        .WithMany("ExercisesBodyParts")
                        .HasForeignKey("fk_exercise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyPart");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("ExerciseExecution", b =>
                {
                    b.HasOne("Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("fk_exercise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("fk_workout")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("SubBodyPart", b =>
                {
                    b.HasOne("BodyPart", "BodyPart")
                        .WithMany()
                        .HasForeignKey("fk_bodypart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyPart");
                });

            modelBuilder.Entity("Workout", b =>
                {
                    b.HasOne("WorkoutDay", "WorkoutDay")
                        .WithMany()
                        .HasForeignKey("fk_workoutday")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutDay");
                });

            modelBuilder.Entity("WorkoutDay", b =>
                {
                    b.HasOne("Routine", "Routine")
                        .WithMany()
                        .HasForeignKey("fk_routine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("WorkoutDayExercise", b =>
                {
                    b.HasOne("Exercise", "Exercise")
                        .WithMany("WorkoutDaysExercises")
                        .HasForeignKey("fk_exercise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutDay", "WorkoutDay")
                        .WithMany("WorkoutDaysExercises")
                        .HasForeignKey("fk_workoutday")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutDay");
                });

            modelBuilder.Entity("BodyPart", b =>
                {
                    b.Navigation("ExercisesBodyParts");
                });

            modelBuilder.Entity("Exercise", b =>
                {
                    b.Navigation("ExercisesBodyParts");

                    b.Navigation("WorkoutDaysExercises");
                });

            modelBuilder.Entity("Workout", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("WorkoutDay", b =>
                {
                    b.Navigation("WorkoutDaysExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
